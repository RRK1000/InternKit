{"version":3,"sources":["Components/HomePage/CompanyLogin.jpg","Components/HomePage/StudentLogin.jpg","Components/Header/index.js","Components/StudentDashboard/myRowInternship.js","Components/StudentDashboard/TableInternship.js","Components/StudentDashboard/index.js","Components/CompanyDashboard/OneApplicant.js","Components/CompanyDashboard/ViewApplications.js","Components/CompanyDashboard/myRowInternship.js","Components/CompanyDashboard/TableInternship.js","Components/CompanyDashboard/index.js","Components/HomePage/DefaultPage.js","Components/HomePage/index.js","Components/SignInPage/index.js","Components/SignUpPage/index.js","Components/ProfilePage/AccountTab.js","Components/ProfilePage/PersonalDetailsTab.js","Components/ProfilePage/ProjectsTab.js","Components/ProfilePage/SkillsTab.js","Components/ProfilePage/CompanyDescriptionTab.js","Components/ProfilePage/index.js","Components/Logout/index.js","Components/AddProfilePage/StudentProfile.js","Components/AddProfilePage/CompanyProfile.js","Components/AddProfilePage/index.js","Components/AddInternship/index.js","App.js","serviceWorker.js","index.js","util/auth.js"],"names":["module","exports","withStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","props","classes","isLoggedIn","useStoreValue","loggedInComponent","List","component","ListItem","ListItemText","inset","Link","RouterLink","to","color","className","AppBar","position","Toolbar","Typography","variant","MyRow","row","uid","id","useState","hasApplied","setHasApplied","username","token","a","data","usertype","console","log","fetch","method","mode","headers","body","JSON","stringify","catch","e","alert","res","ok","URLSearchParams","userid","useEffect","TableRow","key","name","TableCell","scope","employer","style","description","gpa","align","branch","city","stipend","Button","onClick","show","useStyles","makeStyles","table","minWidth","MyTable","rows","TableContainer","Paper","Table","aria-label","TableHead","TableBody","map","marginTop","createDataInternship","StudentDashboard","rowsInternship","setRowsInternship","hasProfile","fetchInternships","useCallback","appliedInternships","json","Object","keys","forEach","v","info","itr_name","emp_name","push","Container","maxWidth","OneApplicant","details","showDetails","setShowDetails","clicked","setClicked","accProb","setAccProb","internshipId","probabilityAcceptance","toPrecision","email","college","dob","education","phone","skills","trim","ViewApplications","applicants","length","keyName","i","hideApplications","hasClicked","sethasClicked","setApplicants","useGetAndSet","refreshInternships","setRefreshInternships","intervalId","fetchApplications","Error","clearInterval","Grid","container","item","then","setInterval","window","confirm","deleteInternship","CompanyDashboard","emp_id","images","url","company","width","student","display","flexWrap","image","height","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","imageMarked","ButtonBases","setUserType","useSetStoreValue","ButtonBase","focusRipple","focusVisibleClassName","backgroundImage","Home","loggedOutComponent","setToken","require","margin","heading","button","marginLeft","caption","setUsername","password","setPassword","hasSubmitted","setHasSubmitted","setHasProfile","setIsLoggedIn","setAuthUsername","noValidate","autoComplete","TextField","required","label","value","error","helperText","onChange","target","type","href","assign","response","status","statusText","formControl","repassword","setRePassword","setName","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","axios","put","err","message","form","paddingTop","marginBottom","fontSize","AccountTab","currentPassword","setCurrentPassword","handleChange","current_password","new_password","location","reload","PersonalDetailsTab","setDob","setEmail","setPhone","github","setGithub","linkedIn","setLinkedIn","o_dob","setODob","o_email","setOEmail","o_phone","setOPhone","o_github","setOGithub","o_linkedIn","setOLinkedIn","index","snetwork","search","git","substr","l","ndetails","column_details","new_details","project","paper","ProjectsTab","pdescription","setPdescription","val","setProject","desc","setDesc","handleProjectChange","event","vals","handleDescChange","removeProject","splice","projects","slice","split","list","proj","tmp","el","displayProjects","elevation","bind","x","IconButton","size","SkillsTab","setSkills","skill","setSkill","values","setValues","handleSkillChange","handleValueChange","removeSkill","tmp_skills","pop","displaySkills","xs","skillsList","cdescription","setCdescription","ncdescription","setNCdescription","disabled","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","Profile","useTheme","React","setValue","newValue","Tabs","indicatorColor","textColor","Tab","dir","direction","Logout","localStorage","removeItem","StudentProfile","grade12","setGrade12","setGpa","setCollege","setBranch","projList","CompanyProfile","cname","setCname","post","setPost","AddProfile","setItr_name","setStipend","setCity","setDescription","hasCreated","setHasCreated","initialState","parse","getItem","storeConfig","listener","state","setItem","logging","process","withStore","exact","path","SignIn","SignUp","AddInternship","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a3663f7b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/CompanyLogin.e005eba8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/StudentLogin.0944448d.jpg\";","import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Link from \"@material-ui/core/Link\";\nimport { Link as RouterLink } from 'react-router-dom';\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { useStoreValue } from 'react-context-hook';\n\nconst useStyles = (theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n});\n\nfunction Header(props) {\n    const { classes } = props;\n    const isLoggedIn = useStoreValue('isLoggedIn', false);\n    const loggedInComponent = (\n        <List component=\"nav\">\n            <ListItem component=\"div\">\n                <ListItemText inset>\n                    <Link component={RouterLink} to='/' color=\"inherit\">\n                        Home\n                    </Link>\n                </ListItemText>\n\n                <ListItemText inset>\n                    <Link component={RouterLink} to=\"/profile\" color=\"inherit\">\n                        Profile\n                    </Link>\n                </ListItemText>\n\n                <ListItemText inset>\n                    <Link component={RouterLink} to=\"/logout\" color=\"inherit\">\n                        Logout\n                    </Link>\n                </ListItemText>\n            </ListItem>\n        </List>\n    );\n    const loggedOutComponent = (\n        <List component=\"nav\">\n            <ListItem component=\"div\">\n                <ListItemText inset>\n                    <Link component={RouterLink} to=\"/\" color=\"inherit\">\n                        Home\n                    </Link>\n                </ListItemText>\n                \n                <ListItemText inset>\n                    <Link component={RouterLink} to=\"/signup\" color=\"inherit\">\n                        Register\n                    </Link>\n                </ListItemText>\n            </ListItem>\n        </List>\n    );\n    let component = loggedOutComponent;\n    if (isLoggedIn) component = loggedInComponent;\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    <Typography variant=\"h5\" className={classes.title}>\n                        InternKit\n                    </Typography>\n\n                    {component}\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n\nexport default withStyles(useStyles)(Header);\n","import React, { useState, useEffect } from 'react';\nimport { TableRow, TableCell, Button, Link } from '@material-ui/core';\nimport { useStoreValue } from 'react-context-hook';\nconst baseUrl = /*notLocalhost*/\"\"\n\nfunction MyRow(props) {\n\tconst row = props.row;\n\tconst uid = row.id;\n\tconst [hasApplied, setHasApplied] = useState(row.hasApplied);\n\tconst username = useStoreValue('username')\n\tconst token = useStoreValue('isLoggedIn')\n\n\tuseEffect(() => {\n\t\tsetHasApplied(row.hasApplied);\n\t}, [row.hasApplied])\n\n\tasync function applyInternship() {\n\t\tif (hasApplied) return;\n\t\tlet data = { username, uid, usertype: \"internship\", token }\n\t\tconsole.log(data);\n\t\tlet res = await fetch(/*noUrl*/ \"/api/v1/apply\", {\n\t\t\tmethod: \"PUT\",\n\t\t\tmode: 'cors',\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t},\n\t\t\tbody: JSON.stringify(data)\n\t\t}).catch(e => alert(e));\n\t\tconsole.log(res)\n\t\tif (res.ok) { setHasApplied(true) }\n\t\telse alert(JSON.stringify(res))\n\t};\n\n\tasync function revokeInternship() {\n\t\tlet res = await fetch(/*noUrl*/ \"/api/v1/delete_applied?\" + new URLSearchParams({ userid: username, uid }), {\n\t\t\tmethod: \"DELETE\",\n\t\t\tmode: \"cors\"\n\t\t}).catch(e => alert(e));\n\t\tif (res && res.ok)\n\t\t\tsetHasApplied(false);\n\t}\n\n\treturn (\n\t\t<TableRow key={row.name}>\n\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t<b>{row.name}</b>\n\t\t\t\t<p>{row.employer}</p>\n\t\t\t\t<p style={{ \"whiteSpace\": \"pre-line\" }}>{row.description}</p>\n\t\t\t\t<p>GPA criteria: {row.gpa}</p>\n\t\t\t</TableCell>\n\t\t\t<TableCell align=\"right\">{row.branch}</TableCell>\n\t\t\t<TableCell align=\"right\">{row.city}</TableCell>\n\t\t\t<TableCell align=\"right\">{row.stipend}</TableCell>\n\t\t\t<TableCell align=\"right\">\n\t\t\t\t<Button\n\t\t\t\t\tvariant={hasApplied ? \"contained\" : \"outlined\"}\n\t\t\t\t\tonClick={applyInternship}\n\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t>\n\t\t\t\t\t{hasApplied ? \"Applied\" : \"Apply\"}\n\t\t\t\t</Button>\n\t\t\t\t{hasApplied && (\n\t\t\t\t\t<Link color=\"secondary\" show={hasApplied} component=\"button\" onClick={revokeInternship}>\n\t\t\t\t\t\tRevoke\n\t\t\t\t\t</Link>\n\t\t\t\t)}\n\t\t\t</TableCell>\n\t\t</TableRow>\n\t);\n}\n\nexport default MyRow;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MyRow from './myRowInternship';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function MyTable(props) {\n  const classes = useStyles();\n  const rows = props.rows;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Internship name</TableCell>\n            <TableCell align=\"right\">Branch</TableCell>\n            <TableCell align=\"right\">City</TableCell>\n            <TableCell align=\"right\">Stipend</TableCell>\n            <TableCell align=\"right\"></TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <MyRow key={row.id} row={row} />\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer >\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport { Container } from '@material-ui/core';\nimport TableInternship from \"./TableInternship\"\nimport { useStoreValue } from 'react-context-hook';\n\nconst baseUrl = /*notLocalhost*/\"\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(5),\n  },\n}));\n\nfunction createDataInternship(id, name, branch, city, stipend, gpa, employer, description = \"No description added.\", hasApplied = false) {\n  return { id, name, branch, city, stipend, gpa, employer, description, hasApplied };\n}\n\nfunction StudentDashboard() {\n  const classes = useStyles();\n  const [rowsInternship, setRowsInternship] = useState([]);\n  const username = useStoreValue('username')\n  // const [rowsScholarship, setRowsScholarship] = useState([]);\n  const hasProfile = useStoreValue(\"hasProfile\");\n\n  const fetchInternships = useCallback(async () => {\n    // Fetch applied intnernships\n    let appliedInternships = await fetch(/*noUrl*/ \"/api/v1/internships_scholarships_posted_applied?\" + new URLSearchParams({ uid: username, usertype: \"student\" }), {\n      mode: 'cors',\n    }).catch(e => console.log(\"Failed to fetch\" + e)) || {};\n    if (appliedInternships && appliedInternships.ok) {\n      appliedInternships = await appliedInternships.json()\n      Object.keys(appliedInternships).forEach(v => appliedInternships[v] = true)\n    }\n\n    // Fetch all internships\n    let res = await fetch(/*noUrl*/ \"/api/v1/all_internship_scholarship\", {\n      mode: 'cors',\n    }).catch(e => console.log(\"Failed to fetch\" + e));\n    if (res && res.ok) {\n      let data = await res.json();\n      let rows = []\n      for (const uid in data) {\n        if (uid[0] === 'i') { // Internship\n          let info = data[uid]\n          let row = createDataInternship(uid, info.itr_name, info.branch, info.city, info.stipend, info.gpa, info.emp_name, info.description, appliedInternships[uid])\n          rows.push(row)\n        }\n        else { //Scholarship\n\n        }\n      }\n      setRowsInternship(rows);\n    }\n  }, [username])\n\n  useEffect(() => {\n    fetchInternships()\n  }, [fetchInternships]);\n\n  if (!hasProfile) return <Redirect to=\"/addprofile\" />;\n\n  return (\n    <Container className={classes.root} maxWidth=\"lg\">\n      <TableInternship rows={rowsInternship} />\n    </Container>\n  )\n}\n\nexport default StudentDashboard;","import React, { useState } from 'react';\nimport { Link, Container } from '@material-ui/core';\nconst baseUrl = /*notLocalhost*/\"\"\n\nfunction OneApplicant(props) {\n\tconst details = props.details;\n\tconst [showDetails, setShowDetails] = useState(false)\n\tconst [clicked, setClicked] = useState(false)\n\tconst [accProb, setAccProb] = useState(-1)\n\n\tasync function getAcceptanceProb() {\n\t\tsetClicked(true)\n\t\tlet res = await fetch(/*noUrl*/ \"/api/v1/internship_probability_acceptance?\" + new URLSearchParams({ uid: props.internshipId, userid: details.uid }), {\n\t\t\tmode: 'cors',\n\t\t}).catch(e => console.log(\"Failed to fetch\" + e));\n\t\t// console.log(res)\n\t\tif (res && res.ok) {\n\t\t\tres = await res.json();\n\t\t\tlet probabilityAcceptance = (res[\"probability_acceptance\"] * 100).toPrecision(4)\n\t\t\tsetAccProb(probabilityAcceptance)\n\t\t}\n\t}\n\treturn (\n\t\t<div>\n\t\t\t<Link\n\t\t\t\tcomponent=\"button\"\n\t\t\t\tvariant=\"body2\"\n\t\t\t\tclassName=\"input-label\"\n\t\t\t\tonClick={() => setShowDetails(!showDetails)}\n\t\t\t>\n\t\t\t\t{details.name} ({details.email})\n\t\t\t</Link>\n\t\t\t{showDetails && (\n\t\t\t\t<div style={{ \"whiteSpace\": \"pre-line\" }}>\n\t\t\t\t\tbranch: {details.branch}<br />\n\t\t\t\t\t\t\tcollege: {details.college}<br />\n\t\t\t\t\t\t\tdob: {details.dob}<br />\n\t\t\t\t\t\t\teducation: {details.education}<br />\n\t\t\t\t\t\t\tphone: {details.phone}<br />\n\t\t\t\t\t\t\tskills:\n\t\t\t\t\t<Container>\n\t\t\t\t\t\t{details.skills.trim()}<br />\n\t\t\t\t\t</Container>\n\t\t\t\t\t{(clicked && accProb !== -1) ?\n\t\t\t\t\t\t<span style={{ \"color\": \"red\" }}>Match percentage: {accProb} %</span> :\n\t\t\t\t\t\t<Link component=\"button\" variant=\"body2\"\n\t\t\t\t\t\t\t// color=\"primary\"\n\t\t\t\t\t\t\t// size=\"small\"\n\t\t\t\t\t\t\tonClick={getAcceptanceProb}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{(clicked && accProb === -1) ? \"Fetching...\" : \"View match percentage\"}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t}\n\t\t\t\t\t<br />\n\t\t\t\t\t<Link component=\"button\" variant=\"body2\" onClick={() => setShowDetails(false)}>hide</Link>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\n\nexport default OneApplicant;","import React from 'react';\nimport { Link } from '@material-ui/core';\nimport OneApplicant from './OneApplicant.js'\n\nfunction ViewApplications(props) {\n\tconst applicants = props.applicants;\n\treturn (\n\t\t<div>\n\t\t\t{!Object.keys(applicants).length ?\n\t\t\t\t<p>No applicants.</p> :\n\t\t\t\t<ol>\n\t\t\t\t\t{Object.keys(applicants).map((keyName, i) => (\n\t\t\t\t\t\t<li className=\"travelcompany-input\" key={i}>\n\t\t\t\t\t\t\t<OneApplicant details={applicants[keyName]} internshipId={props.internshipId} />\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</ol>\n\t\t\t}\n\t\t\t<Link component=\"button\" variant=\"body2\"  onClick={props.hideApplications} color=\"primary\">\n\t\t\t\tHide Applications\n\t\t\t</Link>\n\t\t</div>\n\t)\n}\n\nexport default ViewApplications;","import React, { useState } from 'react';\nimport { TableRow, TableCell, Button, Grid } from '@material-ui/core';\nimport ViewApplications from './ViewApplications'\nimport { useGetAndSet } from 'react-context-hook';\nconst baseUrl = /*notLocalhost*/\"\"\n\nfunction MyRow(props) {\n\tconst row = props.row;\n\tconst uid = row.id;\n\tconst [hasClicked, sethasClicked] = useState(false);\n\tconst [applicants, setApplicants] = useState({});\n\tconst [refreshInternships, setRefreshInternships] = useGetAndSet('refreshInternships', 1);\n\tvar intervalId = 0;\n\n\tasync function fetchApplications() {\n\t\tlet res = await fetch(/*noUrl*/ \"/api/v1/students_internship_scholarship?\" + new URLSearchParams({ uid }), {\n\t\t\tmode: 'cors',\n\t\t}).catch(e => console.log(\"Failed to fetch\" + e));\n\t\tif (res && res.ok) {\n\t\t\tsetApplicants(await res.json())\n\t\t}\n\t\telse throw Error(\"Failed to fetch\")\n\t};\n\n\tfunction onViewApplications() {\n\t\tfetchApplications()\n\t\t\t.then(() => sethasClicked(true))\n\t\t\t.catch(e => alert(e))\n\n\t\tintervalId = setInterval(() => {\n\t\t\tfetchApplications()\n\t\t\t\t.then(() => sethasClicked(true))\n\t\t\t\t.catch(e => alert(e))\n\t\t}, 5000);\n\t}\n\n\tfunction hideApplications() {\n\t\tclearInterval(intervalId)\n\t\tsethasClicked(false)\n\t}\n\n\tasync function deleteInternship() {\n\t\tlet res = await fetch(/*noUrl*/ \"/api/v1/delete?\" + new URLSearchParams({ uid, usertype: \"internship\" }), {\n\t\t\tmethod: 'DELETE',\n\t\t\tmode: 'cors',\n\t\t}).catch(e => console.log(\"Failed to fetch\" + e));\n\t\tif (res && res.ok) {\n\t\t\tsetRefreshInternships(refreshInternships + 1);\n\t\t}\n\t}\n\n\treturn (\n\t\t<TableRow key={row.name}>\n\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t<b>{row.name}</b>\n\t\t\t\t{/* <p>{row.employer}</p> */}\n\t\t\t\t<p style={{ \"whiteSpace\": \"pre-line\" }}>{hasClicked ? \"\" : row.description}</p>\n\t\t\t\t<p>{hasClicked ? \"\" : \"GPA criteria: \" + row.gpa}</p>\n\t\t\t\t{\n\t\t\t\t\thasClicked ?\n\t\t\t\t\t\t<ViewApplications hideApplications={hideApplications} applicants={applicants} internshipId={row.id} /> :\n\t\t\t\t\t\t<Grid container spacing={1}>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tonClick={onViewApplications}\n\t\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\"View Applications\"}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tif (window.confirm('Delete the item?'))\n\t\t\t\t\t\t\t\t\t\t\tdeleteInternship()\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\tcolor=\"secondary\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{\"DELETE\"}\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Grid>\n\n\t\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t</TableCell>\n\n\t\t\t<TableCell align=\"right\">{row.branch}</TableCell>\n\t\t\t<TableCell align=\"right\">{row.city}</TableCell>\n\t\t\t<TableCell align=\"right\">{row.stipend}</TableCell>\n\n\t\t\t{/* <TableCell align=\"right\">\n\t\t\t\t\n\t\t\t</TableCell> */}\n\t\t</TableRow >\n\t);\n}\n\nexport default MyRow;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport MyRow from './myRowInternship';\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 650,\n  },\n});\n\nexport default function MyTable(props) {\n  const classes = useStyles();\n  const rows = props.rows;\n  return rows.length === 0 ? <div>No internships found.</div> :\n    (\n      < TableContainer component={Paper} >\n        <Table className={classes.table} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Internship name</TableCell>\n              <TableCell align=\"right\">Branch</TableCell>\n              <TableCell align=\"right\">City</TableCell>\n              <TableCell align=\"right\">Stipend</TableCell>\n              {/* <TableCell align=\"right\"></TableCell> */}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <MyRow key={row.id} row={row} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer >\n\n    );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from \"react-router-dom\";\nimport { Container, Link, Button } from '@material-ui/core';\nimport TableInternship from \"./TableInternship\"\nimport { useStoreValue } from 'react-context-hook';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst baseUrl = /*notLocalhost*/\"\"\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(5),\n  },\n}));\n\nfunction createDataInternship(id, name, branch, city, stipend, gpa, employer, description = \"No description added.\") {\n  return { id, name, branch, city, stipend, gpa, employer, description };\n}\n\nfunction CompanyDashboard() {\n  const classes = useStyles();\n  const [rowsInternship, setRowsInternship] = useState([]);\n  const username = useStoreValue('username');\n  const hasProfile = useStoreValue(\"hasProfile\");\n  const refreshInternships = useStoreValue('refreshInternships', 1)\n\n  const fetchInternships = useCallback(async () => {\n    let res = await fetch(/*noUrl*/ \"/api/v1/all_internship_scholarship\", {\n      mode: 'cors',\n      headers: {\n        \"Content-Type\": \"application/json\",\n      }\n    }).catch(e => console.log(\"Failed to fetch\" + e));\n    let data = await res.json();\n    let rows = []\n    for (const uid in data) {\n      if (uid[0] === 'i') { // Internship\n        let info = data[uid]\n        if (info.emp_id === username) {\n          let row = createDataInternship(uid, info.itr_name, info.branch, info.city, info.stipend, info.gpa, info.emp_name, info.description)\n          rows.push(row)\n        }\n      }\n      else { //Scholarship\n\n      }\n    }\n    setRowsInternship(rows);\n  }, [username, refreshInternships]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    fetchInternships();\n    setInterval(() => {\n      fetchInternships();\n    }, 5000);\n  }, [fetchInternships]);\n  if (!hasProfile) return <Redirect to=\"/addprofile\" />;\n\n  return (\n    <Container className={classes.root} maxWidth=\"lg\">\n      <Link component={RouterLink} to='addInternship'>\n        <Button\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n          Add new Internship\n        </Button>\n      </Link>\n      <p />\n      <TableInternship rows={rowsInternship} />\n    </Container>\n  )\n}\n\nexport default CompanyDashboard;","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useSetStoreValue } from \"react-context-hook\";\nimport company from \"./CompanyLogin.jpg\";\nimport student from \"./StudentLogin.jpg\";\n\nconst images = [\n    {\n        url: company,\n        title: \"For Companies\",\n        width: \"50%\",\n        usertype: \"employee\",\n    },\n    {\n        url: student,\n        title: \"For Students\",\n        width: \"50%\",\n        usertype: \"student\",\n    },\n];\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        minWidth: 300,\n        width: \"100%\",\n    },\n    image: {\n        position: \"relative\",\n        height: 400,\n        // width: 500,\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"100% !important\", // Overrides inline-style\n            height: 100,\n        },\n        \"&:hover, &$focusVisible\": {\n            zIndex: 1,\n            \"& $imageBackdrop\": {\n                opacity: 0.15,\n            },\n            \"& $imageMarked\": {\n                opacity: 0,\n            },\n            \"& $imageTitle\": {\n                border: \"4px solid currentColor\",\n            },\n        },\n    },\n    focusVisible: {},\n    imageButton: {\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        color: theme.palette.common.white,\n    },\n    imageSrc: {\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundSize: \"cover\",\n        height: 400, \n        // width: 500,\n        backgroundPosition: \"center 40%\",\n    },\n    imageBackdrop: {\n        position: \"absolute\",\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n        backgroundColor: theme.palette.common.black,\n        opacity: 0.4,\n        transition: theme.transitions.create(\"opacity\"),\n    },\n    imageTitle: {\n        position: \"relative\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\n            theme.spacing(1) + 6\n        }px`,\n    },\n    imageMarked: {\n        height: 3,\n        width: 18,\n        backgroundColor: theme.palette.common.white,\n        position: \"absolute\",\n        bottom: -2,\n        left: \"calc(50% - 9px)\",\n        transition: theme.transitions.create(\"opacity\"),\n    },\n}));\n\nexport default function ButtonBases() {\n    const classes = useStyles();\n    const setUserType = useSetStoreValue(\"usertype\");\n\n    return (\n        <div className={classes.root}>\n            {images.map((image) => (\n                <ButtonBase\n                    focusRipple\n                    key={image.title}\n                    className={classes.image}\n                    component={RouterLink}\n                    to=\"/signin\"\n                    onClick={() => {\n                        setUserType(image.usertype);\n                    }}\n                    focusVisibleClassName={classes.focusVisible}\n                    style={{\n                        width: image.width,\n                    }}\n                >\n                    <span\n                        className={classes.imageSrc}\n                        style={{\n                            backgroundImage: `url(${image.url})`\n                        }}\n                    />\n                    {/* <img className={classes.imageSrc} src={images.src === \"company\" ? company : student} /> */}\n                    <span className={classes.imageBackdrop} />\n                    <span className={classes.imageButton}>\n                        <Typography\n                            component=\"span\"\n                            variant=\"subtitle1\"\n                            color=\"inherit\"\n                            className={classes.imageTitle}\n                        >\n                            {image.title}\n                            <span className={classes.imageMarked} />\n                        </Typography>\n                    </span>\n                </ButtonBase>\n            ))}\n        </div>\n    );\n}\n","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport StudentDashBoard from \"../StudentDashboard\";\nimport CompanyDashBoard from \"../CompanyDashboard\";\nimport DefaultPage from \"./DefaultPage\"\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useStoreValue } from 'react-context-hook';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(5),\n  },\n}));\n\nexport default function Home() {\n  const classes = useStyles();\n  const isLoggedIn = useStoreValue('isLoggedIn', false);\n  const usertype = useStoreValue('usertype', 'student');\n  const loggedInComponent = usertype === 'student' ? <StudentDashBoard /> : <CompanyDashBoard />;\n  const loggedOutComponent = <DefaultPage />;\n\n  return (\n    <Container className={classes.root} maxWidth=\"lg\">\n      {isLoggedIn ? loggedInComponent : loggedOutComponent}\n    </Container>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useGetAndSet, useSetStoreValue } from \"react-context-hook\";\n\nconst setToken = require(\"../../util/auth\").setToken;\n\nconst useStyles = (theme) => ({\n    root: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    heading: {\n        margin: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    caption: {\n        marginLeft: theme.spacing(1),\n    },\n});\n\nfunction SignIn(props) {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n    var token = null;\n\n    const [usertype, setUserType] = useGetAndSet(\"usertype\", \"student\");\n    const [hasProfile, setHasProfile] = useGetAndSet(\"hasProfile\", false);\n    const [isLoggedIn, setIsLoggedIn] = useGetAndSet(\"isLoggedIn\");\n    const setAuthUsername = useSetStoreValue(\"username\");\n\n    const doLogin = () => {\n        setHasSubmitted(true);\n        const data = Object.assign({}, { username, password, usertype });\n        console.log(data);\n        fetch(/*notLocalhost*/\"/api/v1/login\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => {\n                console.log(response);\n                if (response.ok) return response.json();\n                else throw Error(response.status + \" \" + response.statusText);\n            })\n            .then((data) => {\n                console.log(\"Success:\", data);\n                token = data.token;\n                return fetch(\n                    /*notLocalhost*/\"/api/v1/getdetails?\" +\n                        new URLSearchParams({\n                            uid: username,\n                            usertype,\n                        }),\n                    {\n                        method: \"GET\",\n                        mode: \"cors\",\n                    }\n                );\n            })\n            .then((response) => {\n                console.log(response);\n                setHasProfile(response.ok);\n            })\n            .then(() => {\n                console.log(token);\n                setIsLoggedIn(token);\n                setUserType(usertype);\n                setAuthUsername(username);\n                setHasSubmitted(false);\n\n                setToken(token); // maintained so other things don't break.\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                alert(\"Credentials Invalid.\");\n                setPassword(\"\");\n                setHasSubmitted(false);\n            });\n    };\n    const { classes } = props;\n    if (isLoggedIn)\n        if (hasProfile) return <Redirect to=\"/\" />;\n        else return <Redirect to=\"/addprofile\" />;\n    else\n        return (\n            <Container maxWidth=\"sm\">\n                <Typography className={classes.heading} variant=\"h4\">\n                    Sign In\n                </Typography>\n                <form\n                    className={classes.root}\n                    noValidate\n                    autoComplete=\"off\"\n                    // onSubmit={this.doLogin}\n                >\n                    <Grid container>\n                        <Grid container item>\n                            <TextField\n                                required\n                                id=\"outlined-required\"\n                                label=\"Username\"\n                                name=\"username\"\n                                value={username}\n                                variant=\"outlined\"\n                                error={\n                                    username === \"\" && hasSubmitted\n                                        ? true\n                                        : false\n                                }\n                                helperText={\n                                    password === \"\" && hasSubmitted\n                                        ? \"Incorrect entry.\"\n                                        : \"\"\n                                }\n                                onChange={(e) => {\n                                    setHasSubmitted(false);\n                                    setUsername(e.target.value);\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid container item>\n                            <TextField\n                                required\n                                id=\"standard-password-input\"\n                                label=\"Enter Password\"\n                                type=\"password\"\n                                name=\"password\"\n                                value={password}\n                                error={\n                                    password === \"\" && hasSubmitted\n                                        ? true\n                                        : false\n                                }\n                                helperText={\n                                    password === \"\" && hasSubmitted\n                                        ? \"Incorrect entry.\"\n                                        : \"\"\n                                }\n                                autoComplete=\"current-password\"\n                                variant=\"outlined\"\n                                onChange={(e) => {\n                                    setHasSubmitted(false);\n                                    setPassword(e.target.value);\n                                }}\n                            />\n                        </Grid>\n\n                        <Grid container item>\n                            <Typography\n                                className={classes.caption}\n                                variant=\"caption\"\n                            >\n                                Don't have an account?{\" \"}\n                                <Link href=\"/signup\" color=\"primary\">\n                                    Click here\n                                </Link>\n                            </Typography>\n                        </Grid>\n                        <Grid container item>\n                            <Button\n                                className={classes.button}\n                                variant=\"contained\"\n                                color=\"primary\"\n                                // type=\"submit\"\n                                onClick={doLogin}\n                            >\n                                Login\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </form>\n            </Container>\n        );\n}\n\nexport default withStyles(useStyles)(SignIn);\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { useGetAndSet, useSetStoreValue } from \"react-context-hook\";\n\nconst setToken = require(\"../../util/auth\").setToken;\n\nconst useStyles = (theme) => ({\n    root: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    heading: {\n        margin: theme.spacing(2),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    caption: {\n        marginLeft: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        marginLeft: theme.spacing(2),\n        marginTop: theme.spacing(3),\n    },\n});\n\nfunction SignUp(props) {\n    const [isLoggedIn, setIsLoggedIn] = useGetAndSet(\"isLoggedIn\");\n    const [usertype, setUserType] = useGetAndSet(\"usertype\");\n    const setHasProfile = useSetStoreValue(\"hasProfile\");\n    const setAuthUsername = useSetStoreValue(\"username\");\n    const [hasSubmitted, setHasSubmitted] = useState(false);\n\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [repassword, setRePassword] = useState(\"\");\n    const [name, setName] = useState(\"\");\n\n    const onSubmit = () => {\n        setHasSubmitted(true);\n        const headers = {\n            \"Content-Type\": \"application/json\",\n            \"Access-Control-Allow-Origin\": \"*\",\n        };\n        const data = { username, password, name, usertype };\n        console.log(data);\n        axios\n            .put(/*notLocalhost*/\"/api/v1/signup\", data, headers)\n            .then((res) => {\n                console.log(res.data);\n                setToken(res.data.token);\n                setIsLoggedIn(res.data.token);\n                setUserType(usertype);\n                setAuthUsername(username);\n                setHasProfile(false);\n            })\n            .catch((err) => {\n                if (err.response) {\n                    alert(err.response.data.message);\n                    setHasSubmitted(false);\n                } else alert(err);\n            });\n    };\n    const { classes } = props;\n\n    return isLoggedIn ? (\n        <Redirect to=\"/addprofile\" />\n    ) : (\n        <Container maxWidth=\"sm\">\n            <Typography className={classes.heading} variant=\"h4\">\n                Sign Up\n            </Typography>\n            <form\n                className={classes.root}\n                noValidate\n                autoComplete=\"off\"\n                // onSubmit={this.onSubmit}\n            >\n                <Grid container>\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Username\"\n                            name=\"username\"\n                            value={username}\n                            error={\n                                username === \"\" && hasSubmitted ? true : false\n                            }\n                            helperText={\n                                username === \"\" && hasSubmitted\n                                    ? \"Incorrect entry.\"\n                                    : \"\"\n                            }\n                            variant=\"outlined\"\n                            onChange={(e) => setUsername(e.target.value)}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"standard-password-input1\"\n                            label=\"Enter Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            value={password}\n                            error={\n                                password === \"\" && hasSubmitted ? true : false\n                            }\n                            helperText={\n                                password === \"\" && hasSubmitted\n                                    ? \"Incorrect entry.\"\n                                    : \"\"\n                            }\n                            variant=\"outlined\"\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"standard-password-input2\"\n                            label=\"Re-enter Password\"\n                            type=\"password\"\n                            name=\"repassword\"\n                            value={repassword}\n                            error={\n                                (password === \"\" ||\n                                password !== repassword) &&\n                                hasSubmitted\n                                    ? true\n                                    : false\n                            }\n                            helperText={\n                                (password === \"\" ||\n                                password !== repassword) &&\n                                hasSubmitted\n                                    ? \"Passwords don't match.\"\n                                    : \"\"\n                            }\n                            variant=\"outlined\"\n                            onChange={(e) => setRePassword(e.target.value)}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required2\"\n                            label=\"Name\"\n                            name=\"name\"\n                            value={name}\n                            error={name === \"\" && hasSubmitted ? true : false}\n                            helperText={\n                                name === \"\" && hasSubmitted\n                                    ? \"Incorrect entry.\"\n                                    : \"\"\n                            }\n                            variant=\"outlined\"\n                            onChange={(e) => setName(e.target.value)}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <FormControl\n                            className={classes.formControl}\n                            component=\"fieldset\"\n                        >\n                            <FormLabel component=\"legend\">\n                                Student/Company\n                            </FormLabel>\n                            <RadioGroup\n                                aria-label=\"UserType\"\n                                name=\"usertype\"\n                                value={usertype}\n                                onChange={(e) => setUserType(e.target.value)}\n                            >\n                                <FormControlLabel\n                                    value=\"student\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Student\"\n                                />\n                                <FormControlLabel\n                                    value=\"employee\"\n                                    control={<Radio color=\"primary\" />}\n                                    label=\"Company\"\n                                />\n                            </RadioGroup>\n                        </FormControl>\n                    </Grid>\n\n                    <Grid container item>\n                        <Typography\n                            className={classes.caption}\n                            variant=\"caption\"\n                        >\n                            Already have an account?{\" \"}\n                            <Link href=\"/signin\" color=\"primary\">\n                                Click here\n                            </Link>\n                        </Typography>\n                    </Grid>\n                    <Grid container item>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            // type=\"submit\"\n                            onClick={onSubmit}\n                        >\n                            Proceed to Add Profile\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Container>\n    );\n}\n\nexport default withStyles(useStyles)(SignUp);\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useGetAndSet, useStoreValue } from \"react-context-hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    container: {\n        marginTop: theme.spacing(3),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    caption: {\n        marginLeft: theme.spacing(2),\n        marginTop: theme.spacing(0),\n        paddingTop: theme.spacing(0),\n        marginBottom: theme.spacing(2),\n        fontSize: 9,\n    },\n}));\n\nexport default function AccountTab() {\n    const classes = useStyles();\n    const username = useStoreValue(\"username\");\n    \n    const [currentPassword, setCurrentPassword] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n\n    const [usertype] = useGetAndSet(\"usertype\");\n    const [isLoggedIn] = useGetAndSet(\"isLoggedIn\");\n\n    const handleChange = (e) => {\n        if (e.target.name === \"currentPassword\")\n            setCurrentPassword(e.target.value);\n        else if (e.target.name === \"password\") setPassword(e.target.value);\n    };\n\n    const changePassword = () => {\n        const data = Object.assign(\n            {},\n            { username, current_password: currentPassword, new_password: password, usertype, token: isLoggedIn}\n        );\n        console.log(data);\n        fetch(/*notLocalhost*/\"/api/v1/editpassword\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => {\n                console.log(response);\n                if (response.ok) {\n                    alert(\"Successfully Changed Password.\");\n                    window.location.reload();\n                } else throw Error(response.status + \" \" + response.statusText);\n            })\n            .catch((err) => {\n                // console.log(err);\n                alert(\"Failed to change password.\");\n            });\n    };\n\n    return (\n        <form className={classes.form} noValidate autoComplete=\"off\">\n            <Grid container>\n                \n                {/* <Grid container item>\n          <Typography className={classes.caption} variant=\"caption\">\n            We won't share your email with anyone else.\n          </Typography>\n        </Grid> */}\n\n                <Grid container item>\n                    <TextField\n                        id=\"standard-password-input1\"\n                        label=\"Current Password\"\n                        type=\"password\"\n                        name=\"currentPassword\"\n                        value={currentPassword}\n                        onChange={handleChange}\n                        // autoComplete=\"current-password\"\n                        variant=\"outlined\"\n                    />\n                </Grid>\n\n                <Grid container item>\n                    <TextField\n                        id=\"standard-password-input2\"\n                        label=\"New Password\"\n                        type=\"password\"\n                        name=\"password\"\n                        value={password}\n                        onChange={handleChange}\n                        // autoComplete=\"current-password\"\n                        variant=\"outlined\"\n                    />\n                </Grid>\n\n                <Grid container item>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={changePassword}\n                    >\n                        Change Password\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useGetAndSet, useStoreValue } from \"react-context-hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    container: {\n        marginTop: theme.spacing(3),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nexport default function PersonalDetailsTab() {\n    const classes = useStyles();\n    const username = useStoreValue(\"username\");\n\n    const [dob, setDob] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [github, setGithub] = useState(\"\");\n    const [linkedIn, setLinkedIn] = useState(\"\");\n\n    const [o_dob, setODob] = useState(\"\");\n    const [o_email, setOEmail] = useState(\"\");\n    const [o_phone, setOPhone] = useState(\"\");\n    const [o_github, setOGithub] = useState(\"\");\n    const [o_linkedIn, setOLinkedIn] = useState(\"\");\n\n    const [isLoggedIn] = useGetAndSet(\"isLoggedIn\");\n    const [usertype] = useGetAndSet(\"usertype\");\n\n    fetch(\n        /*notLocalhost*/\"/api/v1/getdetails?uid=\" +\n            username +\n            \"&usertype=\" +\n            usertype,\n        {\n            method: \"GET\",\n            mode: \"cors\",\n        }\n    )\n        .then((response) => {\n            console.log(response);\n            if (response.ok) return response.json();\n            else throw Error(response.status + \" \" + response.statusText);\n        })\n        .then((data) => {\n            console.log(data);\n            setODob(data.dob);\n            setOEmail(data.email);\n            setOPhone(data.phone);\n            let index = data.snetwork.search(\";\");\n            let git = data.snetwork.substr(0, index);\n            let l = data.snetwork.substr(index + 1, data.snetwork.length);\n            setOGithub(git);\n            setOLinkedIn(l);\n        })\n        .catch((error) => {\n            console.error(\"Error:\", error);\n        });\n\n    const handleChange = (e) => {\n        if (e.target.name === \"dob\") setDob(e.target.value);\n        else if (e.target.name === \"email\") setEmail(e.target.value);\n        else if (e.target.name === \"phone\") setPhone(e.target.value);\n        else if (e.target.name === \"github\") setGithub(e.target.value);\n        else if (e.target.name === \"linkedIn\") setLinkedIn(e.target.value);\n    };\n\n    const editAcc = () => {\n        console.log(o_email);\n        let ndetails =\n            \"[\" +\n            \"'\" +\n            (dob || o_dob) +\n            \"'\" +\n            \",\" +\n            \"'\" +\n            (email || o_email) +\n            \"'\" +\n            \",\" +\n            \"'\" +\n            (phone || o_phone) +\n            \"'\" +\n            \",\" +\n            \"'\" +\n            (github || o_github) +\n            \";\" +\n            (linkedIn || o_linkedIn) +\n            \"'\" +\n            \"]\";\n        console.log(JSON.stringify(ndetails));\n        const body = Object.assign(\n            {},\n            {\n                uid: username,\n                column_details: \"['dob', 'email', 'phone', 'snetwork']\",\n                token: isLoggedIn,\n                new_details: ndetails,\n                usertype,\n            }\n        );\n        console.log(body);\n        fetch(/*notLocalhost*/\"/api/v1/editdetails\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(body),\n        })\n            .then((response) => {\n                console.log(response);\n                if (response.ok) return response.json();\n                else throw Error(response.status + \" \" + response.statusText);\n            })\n            .then((data) => {\n                console.log(\"Success:\", data);\n                alert(\"Successfully Updated.\");\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                alert(error);\n            });\n    };\n    return (\n        <form className={classes.form} noValidate autoComplete=\"off\">\n            <Grid container>\n                <Grid container item>\n                    <TextField\n                        required\n                        id=\"outlined-required\"\n                        label=\"Date of Birth (DD/MM/YYYY)\"\n                        name=\"dob\"\n                        value={dob}\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid container item>\n                    <TextField\n                        required\n                        id=\"outlined-required\"\n                        label=\"Email\"\n                        name=\"email\"\n                        value={email}\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n                <Grid container item>\n                    <TextField\n                        required\n                        id=\"outlined-required\"\n                        label=\"Phone\"\n                        name=\"phone\"\n                        value={phone}\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n                <Grid container item>\n                    <TextField\n                        id=\"outlined1\"\n                        label=\"Github\"\n                        name=\"github\"\n                        value={github}\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n                <Grid container item>\n                    <TextField\n                        id=\"outlined2\"\n                        label=\"LinkedIn\"\n                        name=\"linkedIn\"\n                        value={linkedIn}\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid container item>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={editAcc}\n                    >\n                        Edit Personal Details\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useStoreValue } from \"react-context-hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    container: {\n        marginTop: theme.spacing(3),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    project: {\n        \"& .MuiTextField-root\": {\n            width: \"30ch\",\n        },\n    },\n    value: {\n        \"& .MuiTextField-root\": {\n            width: \"10ch\",\n        },\n    },\n    paper: {\n        \"& .MuiTextField-root\": {\n            width: \"132ch\",\n        },\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nexport default function ProjectsTab() {\n    const classes = useStyles();\n\n    const [pdescription, setPdescription] = useState(\"\");\n\n    const token = useStoreValue(\"isLoggedIn\");\n    const username = useStoreValue(\"username\");\n    const usertype = useStoreValue(\"usertype\");\n\n    const [project, setProject] = useState({ val: [] });\n    const [desc, setDesc] = useState({ val: [] });\n\n    const createProject = () => {\n        let x;\n        return project.val.map((el, i) => (\n            <Paper className={classes.paper} elevation={3} key={i}>\n                <TextField\n                    id={i}\n                    label=\"Project Title\"\n                    className={classes.project}\n                    variant=\"outlined\"\n                    value={el}\n                    onChange={handleProjectChange.bind(i)}\n                />\n                <TextField\n                    id={i}\n                    label=\"Project Description\"\n                    variant=\"outlined\"\n                    value={x}\n                    onChange={handleDescChange.bind(i)}\n                />\n                <IconButton\n                    aria-label=\"delete\"\n                    className={classes.button}\n                    onClick={removeProject.bind(i)}\n                >\n                    <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n            </Paper>\n        ));\n    };\n\n    const handleProjectChange = (event) => {\n        let vals = [...project.val];\n\n        vals[event.target.id] = event.target.value;\n        console.log(vals);\n        setProject({ val: vals });\n    };\n\n    const handleDescChange = (event) => {\n        let vals = [...desc.val];\n\n        vals[event.target.id] = event.target.value;\n        console.log(vals);\n        setDesc({ val: vals });\n    };\n\n    const addProject = () => {\n        setProject({ val: [...project.val, \"\"] });\n        setDesc({ val: [...desc.val, \"\"] });\n    };\n\n    const removeProject = (i) => {\n        let vals = [...project.val];\n        vals.splice(this, 1);\n        setProject({ val: vals });\n\n        let vals1 = [...desc.val];\n        vals1.splice(this, 1);\n        setDesc({ val: vals });\n    };\n\n    // Fetching Previous project details\n    fetch(\n        /*notLocalhost*/\"/api/v1/getdetails?uid=\" +\n        username +\n        \"&usertype=\" +\n        usertype,\n        {\n            method: \"GET\",\n            mode: \"cors\",\n        }\n    )\n        .then((response) => {\n            console.log(response);\n            if (response.ok) return response.json();\n            else throw Error(response.status + \" \" + response.statusText);\n        })\n        .then((data) => {\n            setPdescription(JSON.stringify(data.pdescription));\n        })\n        .catch((error) => {\n            console.error(\"Error:\", error);\n        });\n\n    const displayProjects = () => {\n        let projects = pdescription\n            .slice(1, pdescription.length - 1)\n            .split(\"\\\\n\");\n        console.log(projects);\n        let list = [];\n        for (var proj = 0; proj < projects.length - 1; proj += 2) {\n            let tmp = projects[proj] + \";\" + projects[proj + 1];\n            list.push(tmp);\n        }\n        console.log(list);\n        return list.map((el, i) => (\n            // let index = data.snetwork.search(\";\");\n            //     let git = data.snetwork.substr(0, index);\n            //     let l = data.snetwork.substr(index + 1, data.snetwork.length);\n            <Paper className={classes.paper} elevation={3} key={i}>\n                <TextField\n                    id={i}\n                    label=\"Project Title\"\n                    className={classes.project}\n                    variant=\"outlined\"\n                    value={el.substr(0, el.search(\";\"))}\n                // onChange={handleProjectChange.bind(i)}\n                />\n                <TextField\n                    id={i}\n                    label=\"Project Description\"\n                    variant=\"outlined\"\n                    value={el.substr(el.search(\";\") + 1, el.length)}\n                // onChange={handleDescChange.bind(i)}\n                />\n            </Paper>\n        ));\n    };\n\n    const editAcc = () => {\n        var tmp = pdescription.slice(1, pdescription.length - 1);\n        for (var i = 0; i < project.val.length; i++) {\n            tmp += project.val[i] + \"\\\\n\" + desc.val[i] + \"\\\\n\";\n        }\n        console.log(tmp)\n\n        let ndetails =\n            \"['\" + tmp + \"']\";\n        console.log(ndetails);\n        const body = Object.assign(\n            {},\n            {\n                uid: username,\n                column_details: \"['pdescription']\",\n                token,\n                new_details: ndetails,\n                usertype,\n            }\n        );\n        console.log(body);\n        fetch(/*notLocalhost*/\"/api/v1/editdetails\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(body),\n        })\n            .then((response) => {\n                console.log(response);\n                if (response.ok) return response.json();\n                else throw Error(response.status + \" \" + response.statusText);\n            })\n            .then((data) => {\n                console.log(\"Success:\", data);\n                alert(\"Successfully Updated.\");\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                alert(error);\n            });\n    };\n    return (\n        <form className={classes.form} noValidate autoComplete=\"off\">\n            <Grid container>\n                {displayProjects()}\n                {createProject()}\n                <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={addProject}\n                >\n                    Add Project\n                </Button>\n\n                <Grid container item>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={editAcc}\n                    >\n                        Add Project Details\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {  useStoreValue } from \"react-context-hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    container: {\n        marginTop: theme.spacing(3),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    skills: {\n        \"& .MuiTextField-root\": {\n            width: \"30ch\",\n        },\n    },\n    value: {\n        \"& .MuiTextField-root\": {\n            width: \"10ch\",\n        },\n    },\n    paper: {\n        \"& .MuiTextField-root\": {\n            width: \"30ch\",\n        },\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1),\n    },\n}));\n\nexport default function SkillsTab() {\n    const classes = useStyles();\n\n    const [skills, setSkills] = useState(\"\");\n\n    const token = useStoreValue(\"isLoggedIn\");\n    const username = useStoreValue(\"username\");\n    const usertype = useStoreValue(\"usertype\");\n\n    const [skill, setSkill] = useState({ val: [] });\n    const [values, setValues] = useState({ val: [] });\n\n    const createSkill = () => {\n        let x;\n        return skill.val.map((el, i) => (\n            <Grid container key={i}>\n                <Grid item xs={3} className={classes.skills}>\n                    <TextField\n                        id={i}\n                        label=\"Skill\"\n                        className={classes.skills}\n                        variant=\"outlined\"\n                        value={el}\n                        onChange={handleSkillChange.bind(i)}\n                    />\n                </Grid>\n                <Grid item xs={1} className={classes.value}>\n                    <TextField\n                        id={i}\n                        label=\"1-10\"\n                        variant=\"outlined\"\n                        value={x}\n                        onChange={handleValueChange.bind(i)}\n                    />\n                </Grid>\n                <Grid item xs={3} className={classes.value}>\n                    <IconButton\n                        aria-label=\"delete\"\n                        className={classes.button}\n                        onClick={removeSkill.bind(i)}\n                    >\n                        <DeleteIcon fontSize=\"small\" />\n                    </IconButton>\n                </Grid>\n            </Grid>\n        ));\n    };\n\n    const handleSkillChange = (event) => {\n        let vals = [...skill.val];\n\n        vals[event.target.id] = event.target.value;\n        console.log(vals);\n        setSkill({ val: vals });\n    };\n\n    const handleValueChange = (event) => {\n        let vals = [...values.val];\n\n        vals[event.target.id] = event.target.value;\n        console.log(vals);\n        setValues({ val: vals });\n    };\n\n    const addSkill = () => {\n        setSkill({ val: [...skill.val, \"\"] });\n        setValues({ val: [...values.val, \"\"] });\n    };\n\n    const removeSkill = (i) => {\n        let vals = [...skill.val];\n        vals.splice(this, 1);\n        setSkill({ val: vals });\n\n        let vals1 = [...values.val];\n        vals1.splice(this, 1);\n        setValues({ val: vals });\n    };\n\n    // Fetching Previous project details\n    fetch(\n        /*notLocalhost*/\"/api/v1/getdetails?uid=\" +\n            username +\n            \"&usertype=\" +\n            usertype,\n        {\n            method: \"GET\",\n            mode: \"cors\",\n        }\n    )\n        .then((response) => {\n            console.log(response);\n            if (response.ok) return response.json();\n            else throw Error(response.status + \" \" + response.statusText);\n        })\n        .then((data) => {\n            setSkills(JSON.stringify(data.skills));\n        })\n        .catch((error) => {\n            console.error(\"Error:\", error);\n        });\n\n    const displaySkills = () => {\n        let tmp_skills = skills.slice(1, skills.length - 1).split(\"\\\\n\");\n        console.log(tmp_skills);\n        tmp_skills.pop();\n        return tmp_skills.map((el, i) => (\n            // let index = data.snetwork.search(\";\");\n            //     let git = data.snetwork.substr(0, index);\n            //     let l = data.snetwork.substr(index + 1, data.snetwork.length);\n            <Grid container key={i}>\n                <Grid item xs={3} className={classes.skills}>\n                    <TextField\n                        id={i}\n                        label=\"Skill\"\n                        className={classes.skills}\n                        variant=\"outlined\"\n                        value={el.substr(0, el.search(\"-\"))}\n                        // onChange={handleSkillChange.bind(i)}\n                    />\n                </Grid>\n                <Grid item xs={3} className={classes.value}>\n                    <TextField\n                        id={i}\n                        label=\"1-10\"\n                        variant=\"outlined\"\n                        value={el.substr(el.search(\"-\") + 1, el.length)}\n                        // onChange={handleValueChange.bind(i)}\n                    />\n                </Grid>\n            </Grid>\n        ));\n    };\n\n    const editAcc = () => {\n        var skillsList = skills.slice(1, skills.length - 1);\n        for (var i = 0; i < skill.val.length; i++) {\n            skillsList += skill.val[i] + \"-\" + values.val[i] + \"\\\\n\";\n        }\n\n        let ndetails = \"['\" + skillsList + \"']\";\n        console.log(ndetails);\n        const body = Object.assign(\n            {},\n            {\n                uid: username,\n                column_details: \"['skills']\",\n                token,\n                new_details: ndetails,\n                usertype,\n            }\n        );\n        console.log(body);\n        fetch(/*notLocalhost*/\"/api/v1/editdetails\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(body),\n        })\n            .then((response) => {\n                console.log(response);\n                if (response.ok) return response.json();\n                else throw Error(response.status + \" \" + response.statusText);\n            })\n            .then((data) => {\n                console.log(\"Success:\", data);\n                alert(\"Successfully Updated.\");\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                alert(error);\n            });\n    };\n    return (\n        <form className={classes.form} noValidate autoComplete=\"off\">\n            <Grid container>\n                {displaySkills()}\n                {createSkill()}\n                <Button\n                    variant=\"outlined\"\n                    size=\"small\"\n                    color=\"primary\"\n                    className={classes.button}\n                    onClick={addSkill}\n                >\n                    Add Skill\n                </Button>\n\n                <Grid container item>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={editAcc}\n                    >\n                        Add New Skills\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useGetAndSet, useStoreValue } from \"react-context-hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    form: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    container: {\n        marginTop: theme.spacing(3),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n}));\n\nexport default function PersonalDetailsTab() {\n    const classes = useStyles();\n    const username = useStoreValue(\"username\");\n\n    const [cdescription, setCdescription] = useState(\"\");\n    const [ncdescription, setNCdescription] = useState(\"\");\n\n    const [isLoggedIn] = useGetAndSet(\"isLoggedIn\");\n    const [usertype] = useGetAndSet(\"usertype\");\n\n    fetch(\n        /*notLocalhost*/\"/api/v1/getdetails?uid=\" +\n            username +\n            \"&usertype=\" +\n            usertype,\n        {\n            method: \"GET\",\n            mode: \"cors\",\n        }\n    )\n        .then((response) => {\n            console.log(response);\n            if (response.ok) return response.json();\n            else throw Error(response.status + \" \" + response.statusText);\n        })\n        .then((data) => {\n            setCdescription(data.cdescription);\n        })\n        .catch((error) => {\n            console.error(\"Error:\", error);\n        });\n\n    const handleChange = (e) => {\n        if (e.target.name === \"ncdescription\") setNCdescription(e.target.value);\n    };\n    const displaySDesc = () => {\n        return (\n            <Grid container item>\n                <TextField\n                    disabled\n                    id=\"outlined1\"\n                    className={classes.skills}\n                    label=\"Current Company Description\"\n                    name=\"cdescription\"\n                    value={cdescription}\n                    variant=\"filled\"\n                    // onChange={handleChange}\n                />\n            </Grid>\n        );\n    };\n    const editAcc = () => {\n        let ndetails = \"['\" + ncdescription + \"']\";\n        console.log(JSON.stringify(ndetails));\n        const body = Object.assign(\n            {},\n            {\n                uid: username,\n                column_details: \"['cdescription']\",\n                token: isLoggedIn,\n                new_details: ndetails,\n                usertype,\n            }\n        );\n        console.log(body);\n        fetch(/*notLocalhost*/\"/api/v1/editdetails\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(body),\n        })\n            .then((response) => {\n                console.log(response);\n                if (response.ok) return response.json();\n                else throw Error(response.status + \" \" + response.statusText);\n            })\n            .then((data) => {\n                console.log(\"Success:\", data);\n                alert(\"Successfully Updated.\");\n                window.location.reload();\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                alert(error);\n            });\n    };\n    return (\n        <form className={classes.form} noValidate autoComplete=\"off\">\n            {displaySDesc()}\n            <Grid container>\n                <Grid container item>\n                    <TextField\n                        id=\"outlined-required\"\n                        label=\"Change Company Description\"\n                        name=\"ncdescription\"\n                        value={ncdescription}\n                        variant=\"outlined\"\n                        onChange={handleChange}\n                    />\n                </Grid>\n\n                <Grid container item>\n                    <Button\n                        className={classes.button}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={editAcc}\n                    >\n                        Edit Company Description\n                    </Button>\n                </Grid>\n            </Grid>\n        </form>\n    );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\n// import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport { useStoreValue } from \"react-context-hook\";\n\nimport AccountTab from \"./AccountTab\";\nimport PersonalDetailsTab from \"./PersonalDetailsTab\";\nimport ProjectsTab from \"./ProjectsTab\";\nimport SkillsTab from \"./SkillsTab\";\nimport CompanyDescriptionTab from \"./CompanyDescriptionTab\";\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        \"aria-controls\": `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    heading: {\n        margin: theme.spacing(3),\n    },\n    form: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    container: {\n        marginTop: theme.spacing(3),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n    },\n    caption: {\n        marginLeft: theme.spacing(2),\n        marginTop: theme.spacing(0),\n        paddingTop: theme.spacing(0),\n        marginBottom: theme.spacing(2),\n        fontSize: 9,\n    },\n}));\n\nexport default function Profile() {\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const usertype = useStoreValue(\"usertype\");\n    const hasProfile = useStoreValue(\"hasProfile\");\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    if (!hasProfile) return <Redirect to=\"/addprofile\" />;\n\n    return (\n        <Container maxWidth=\"lg\" className={classes.container}>\n            <Typography variant=\"h3\" className={classes.heading}>\n                Profile\n            </Typography>\n            <AppBar position=\"static\" color=\"default\">\n                {usertype === \"student\" ? (\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"Account\" {...a11yProps(0)} />\n                        <Tab label=\"Personal Details\" {...a11yProps(1)} />\n                        <Tab label=\"Projects\" {...a11yProps(2)} />\n                        <Tab label=\"Skills\" {...a11yProps(3)} />\n                    </Tabs>\n                ) : (\n                    <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"primary\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                    >\n                        <Tab label=\"Account\" {...a11yProps(0)} />\n                        <Tab label=\"Personal Details\" {...a11yProps(1)} />\n                        <Tab label=\"Company Description\" {...a11yProps(2)} />\n                    </Tabs>\n                )}\n            </AppBar>\n\n            <TabPanel value={value} index={0} dir={theme.direction}>\n                <AccountTab />\n            </TabPanel>\n            <TabPanel value={value} index={1} dir={theme.direction}>\n                <PersonalDetailsTab />\n            </TabPanel>\n            {usertype === \"student\" ? (\n                <>\n                    <TabPanel value={value} index={2} dir={theme.direction}>\n                        <ProjectsTab />\n                    </TabPanel>\n                    <TabPanel value={value} index={3} dir={theme.direction}>\n                        <SkillsTab />\n                    </TabPanel>\n                </>\n            ) : (\n                <TabPanel value={value} index={2} dir={theme.direction}>\n                    <CompanyDescriptionTab />\n                </TabPanel>\n            )}\n        </Container>\n    );\n}\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { useSetStoreValue } from 'react-context-hook';\n\nfunction Logout() {\n  const setToken = useSetStoreValue('isLoggedIn');\n  const setUsername = useSetStoreValue('username')\n  const setHasProfile = useSetStoreValue('hasProfile')\n\n  const deleteToken = () => {\n    localStorage.removeItem(\"token\");\n    setToken(false);\n    setUsername(null);\n    setHasProfile(false);\n    return <Redirect to=\"/\" />;\n  }\n  return <div>{deleteToken()}</div>;\n}\n\nexport default Logout;\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useGetAndSet, useStoreValue } from \"react-context-hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    heading: {\n        margin: theme.spacing(2),\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(3),\n    },\n    caption: {\n        marginTop: theme.spacing(4),\n        marginLeft: theme.spacing(1),\n    },\n    skills: {\n        \"& .MuiTextField-root\": {\n            width: \"30ch\",\n        },\n    },\n    value: {\n        \"& .MuiTextField-root\": {\n            width: \"10ch\",\n        },\n    },\n    paper:{\n        marginTop: theme.spacing(3),\n        marginBottom: theme.spacing(1)\n    }\n}));\n\nexport default function StudentProfile() {\n    const classes = useStyles();\n    const [dob, setDob] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [grade12, setGrade12] = useState(\"\");\n    const [gpa, setGpa] = useState(\"\");\n    const [college, setCollege] = useState(\"\");\n    const [branch, setBranch] = useState(\"\");\n    const [github, setGithub] = useState(\"\");\n    const [linkedIn, setLinkedIn] = useState(\"\");\n\n    const [hasProfile, setHasProfile] = useGetAndSet(\"hasProfile\");\n    const token = useStoreValue(\"isLoggedIn\");\n    const username = useStoreValue(\"username\");\n    const usertype = useStoreValue(\"usertype\");\n\n\n    const handleChange = (e) => {\n        if (e.target.name === \"dob\") setDob(e.target.value);\n        else if (e.target.name === \"email\") setEmail(e.target.value);\n        else if (e.target.name === \"phone\") setPhone(e.target.value);\n        else if (e.target.name === \"grade12\") setGrade12(e.target.value);\n        else if (e.target.name === \"gpa\") setGpa(e.target.value);\n        else if (e.target.name === \"college\") setCollege(e.target.value);\n        else if (e.target.name === \"branch\") setBranch(e.target.value);\n        else if (e.target.name === \"github\") setGithub(e.target.value);\n        else if (e.target.name === \"linkedIn\") setLinkedIn(e.target.value);\n    };\n    const [skill, setSkill] = useState({ val: [] });\n    const [values, setValues] = useState({ val: [] });\n\n    const createSkill = () => {\n        let x;\n        return skill.val.map((el, i) => (\n            <Grid container key={i}>\n                <Grid item xs={7} className={classes.skills}>\n                    <TextField\n                        id={i}\n                        label=\"Skill\"\n                        className={classes.skills}\n                        variant=\"outlined\"\n                        value={el}\n                        onChange={handleSkillChange.bind(i)}\n                    />\n                </Grid>\n                <Grid item xs={3} className={classes.value}>\n                    <TextField\n                        id={i}\n                        label=\"1-10\"\n                        variant=\"outlined\"\n                        value={x}\n                        onChange={handleValueChange.bind(i)}\n                    />\n                </Grid>\n                <IconButton\n                    aria-label=\"delete\"\n                    className={classes.button}\n                    onClick={removeSkill.bind(i)}\n                >\n                    <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n            </Grid>\n        ));\n    };\n\n    const handleSkillChange = (event) => {\n        let vals = [...skill.val];\n\n        vals[event.target.id] = event.target.value;\n        console.log(vals);\n        setSkill({ val: vals });\n    };\n\n    const handleValueChange = (event) => {\n        let vals = [...values.val];\n\n        vals[event.target.id] = event.target.value;\n        console.log(vals);\n        setValues({ val: vals });\n    };\n\n    const addSkill = () => {\n        setSkill({ val: [...skill.val, \"\"] });\n        setValues({ val: [...values.val, \"\"] });\n    };\n\n    const removeSkill = (i) => {\n        let vals = [...skill.val];\n        vals.splice(this, 1);\n        setSkill({ val: vals });\n\n        let vals1 = [...values.val];\n        vals1.splice(this, 1);\n        setValues({ val: vals });\n    };\n\n    const [project, setProject] = useState({ val: [] });\n    const [desc, setDesc] = useState({ val: [] });\n\n    const createProject = () => {\n        let x;\n        return project.val.map((el, i) => (\n            <Paper className={classes.paper} elevation={3} key={i}>\n                <TextField\n                    id={i}\n                    label=\"Project Title\"\n                    className={classes.skills}\n                    variant=\"outlined\"\n                    value={el}\n                    onChange={handleProjectChange.bind(i)}\n                />\n                <TextField\n                    id={i}\n                    label=\"Project Description\"\n                    variant=\"outlined\"\n                    value={x}\n                    onChange={handleDescChange.bind(i)}\n                />\n                <IconButton\n                    aria-label=\"delete\"\n                    className={classes.button}\n                    onClick={removeProject.bind(i)}\n                >\n                    <DeleteIcon fontSize=\"small\" />\n                </IconButton>\n            </Paper>\n        ));\n    };\n\n    const handleProjectChange = (event) => {\n        let vals = [...project.val];\n\n        vals[event.target.id] = event.target.value;\n        setProject({ val: vals });\n    };\n\n    const handleDescChange = (event) => {\n        let vals = [...desc.val];\n\n        vals[event.target.id] = event.target.value;\n        setDesc({ val: vals });\n    };\n\n    const addProject = () => {\n        setProject({ val: [...project.val, \"\"] });\n        setDesc({ val: [...desc.val, \"\"] });\n    };\n\n    const removeProject = (i) => {\n        let vals = [...project.val];\n        vals.splice(this, 1);\n        setProject({ val: vals });\n\n        let vals1 = [...desc.val];\n        vals1.splice(this, 1);\n        setDesc({ val: vals });\n    };\n    const createAcc = () => {\n        var skillsList = \"\";\n        for (var i = 0; i < skill.val.length; i++) {\n            skillsList += skill.val[i] + \"-\" + values.val[i] + \"\\n\";\n        }\n\n        var projList = \"\";\n        for (i = 0; i < project.val.length; i++) {\n            projList += project.val[i] + \"\\n\" + desc.val[i] + \"\\n\";\n        }\n        const data = Object.assign(\n            {},\n            {\n                username,\n                dob,\n                token,\n                email,\n                phone,\n                education: grade12 + \";\" + gpa,\n                college,\n                branch,\n                snetwork: github + \";\" + linkedIn,\n                skills: skillsList,\n                pdescription: projList,\n                usertype,\n            }\n        );\n        console.log(JSON.stringify(data));\n        fetch(/*notLocalhost*/\"/api/v1/addprofile\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => {\n                console.log(response);\n                if (response.ok) return response.json();\n                else throw Error(response.status + \" \" + response.statusText);\n            })\n            .then((data) => {\n                console.log(\"Success:\", data);\n                setHasProfile(true);\n                //re-route to home page\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                alert(error);\n            });\n    };\n    if (hasProfile) return <Redirect to=\"/\" />;\n\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography className={classes.heading} variant=\"h3\">\n                Add Profile\n            </Typography>\n            <form\n                className={classes.root}\n                noValidate\n                autoComplete=\"off\"\n                // onSubmit={createAcc}\n            >\n                <Grid container>\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Date of Birth (DD/MM/YYYY)\"\n                            name=\"dob\"\n                            value={dob}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Email\"\n                            name=\"email\"\n                            value={email}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Phone\"\n                            name=\"phone\"\n                            value={phone}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"College Name\"\n                            name=\"college\"\n                            value={college}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Branch\"\n                            name=\"branch\"\n                            value={branch}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <Typography className={classes.caption} variant=\"h4\">\n                            Education Details\n                        </Typography>\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"12th grade(%)\"\n                            name=\"grade12\"\n                            value={grade12}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"College GPA\"\n                            name=\"gpa\"\n                            value={gpa}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <Typography className={classes.caption} variant=\"h4\">\n                            Network Details\n                        </Typography>\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            id=\"outlined1\"\n                            label=\"Github\"\n                            name=\"github\"\n                            value={github}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            id=\"outlined2\"\n                            label=\"LinkedIn\"\n                            name=\"linkedIn\"\n                            value={linkedIn}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <Typography className={classes.caption} variant=\"h4\">\n                            Skills\n                        </Typography>\n                    </Grid>\n                    {createSkill()}\n                    <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={addSkill}\n                    >\n                        Add Skill\n                    </Button>\n\n                    <Grid container item>\n                        <Typography className={classes.caption} variant=\"h4\">\n                            Projects\n                        </Typography>\n                    </Grid>\n                    {createProject()}\n                    <Button\n                        variant=\"outlined\"\n                        size=\"small\"\n                        color=\"primary\"\n                        className={classes.button}\n                        onClick={addProject}\n                    >\n                        Add Project\n                    </Button>\n\n                    <Grid container item>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            //   type=\"submit\"\n                            onClick={createAcc}\n                        >\n                            Create Account\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Container>\n    );\n}\n","import React, { useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useGetAndSet, useStoreValue } from \"react-context-hook\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        \"& .MuiTextField-root\": {\n            margin: theme.spacing(1),\n            width: \"50ch\",\n        },\n    },\n    heading: {\n        margin: theme.spacing(2),\n        marginLeft: theme.spacing(1),\n    },\n    button: {\n        marginLeft: theme.spacing(1),\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(3),\n    },\n    caption: {\n        marginTop: theme.spacing(4),\n        marginLeft: theme.spacing(1),\n    },\n    skills: {\n        width: \"20ch\",\n    },\n}));\n\nexport default function CompanyProfile() {\n    const classes = useStyles();\n    const [dob, setDob] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [phone, setPhone] = useState(\"\");\n    const [cname, setCname] = useState(\"\");\n    const [post, setPost] = useState(\"\");\n    const [github, setGithub] = useState(\"\");\n    const [linkedIn, setLinkedIn] = useState(\"\");\n    const [cdescription, setCdescription] = useState(\"\");\n\n    const token = useStoreValue(\"isLoggedIn\");\n    const username = useStoreValue(\"username\");\n    const usertype = useGetAndSet(\"usertype\");\n    console.log(usertype);\n    const [hasProfile, setHasProfile] = useGetAndSet(\"hasProfile\");\n\n    const handleChange = (e) => {\n        if (e.target.name === \"dob\") setDob(e.target.value);\n        else if (e.target.name === \"email\") setEmail(e.target.value);\n        else if (e.target.name === \"phone\") setPhone(e.target.value);\n        else if (e.target.name === \"cname\") setCname(e.target.value);\n        else if (e.target.name === \"post\") setPost(e.target.value);\n        else if (e.target.name === \"github\") setGithub(e.target.value);\n        else if (e.target.name === \"linkedIn\") setLinkedIn(e.target.value);\n        else if (e.target.name === \"cdescription\")\n            setCdescription(e.target.value);\n    };\n\n    const createAcc = () => {\n        const data = Object.assign(\n            {},\n            {\n                username,\n                dob,\n                token,\n                email,\n                phone,\n                cname,\n                snetwork: github + \";\" + linkedIn,\n                cdescription,\n                usertype: usertype[0],\n            }\n        );\n        console.log(data);\n        fetch(/*notLocalhost*/\"/api/v1/addprofile\", {\n            method: \"POST\",\n            mode: \"cors\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify(data),\n        })\n            .then((response) => {\n                console.log(response);\n                if (response.ok) return response.json();\n                else throw Error(response.status + \" \" + response.statusText);\n            })\n            .then((data) => {\n                console.log(\"Success:\", data);\n                setHasProfile(true);\n            })\n            .catch((error) => {\n                console.error(\"Error:\", error);\n                alert(error);\n            });\n    };\n\n    if (hasProfile) return <Redirect to=\"/\" />;\n    return (\n        <Container maxWidth=\"sm\">\n            <Typography className={classes.heading} variant=\"h3\">\n                Add Profile\n            </Typography>\n            <form\n                className={classes.root}\n                noValidate\n                autoComplete=\"off\"\n                // onSubmit={createAcc}\n            >\n                <Grid container>\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Date of Birth (DD/MM/YYYY)\"\n                            name=\"dob\"\n                            value={dob}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Email\"\n                            name=\"email\"\n                            value={email}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Phone\"\n                            name=\"phone\"\n                            value={phone}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <Typography className={classes.caption} variant=\"h4\">\n                            Company Details\n                        </Typography>\n                    </Grid>\n\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Company Name\"\n                            name=\"cname\"\n                            value={cname}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <TextField\n                            id=\"outlined1\"\n                            className={classes.skills}\n                            label=\"Company Description\"\n                            name=\"cdescription\"\n                            value={cdescription}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <TextField\n                            required\n                            id=\"outlined-required\"\n                            label=\"Post\"\n                            name=\"post\"\n                            value={post}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <Typography className={classes.caption} variant=\"h4\">\n                            Network Details\n                        </Typography>\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            id=\"outlined1\"\n                            label=\"Github\"\n                            name=\"github\"\n                            value={github}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n                    <Grid container item>\n                        <TextField\n                            id=\"outlined2\"\n                            label=\"LinkedIn\"\n                            name=\"linkedIn\"\n                            value={linkedIn}\n                            variant=\"outlined\"\n                            onChange={handleChange}\n                        />\n                    </Grid>\n\n                    <Grid container item>\n                        <Button\n                            className={classes.button}\n                            variant=\"contained\"\n                            color=\"primary\"\n                            //   type=\"submit\"\n                            onClick={createAcc}\n                        >\n                            Create Account\n                        </Button>\n                    </Grid>\n                </Grid>\n            </form>\n        </Container>\n    );\n}\n","import React from \"react\";\nimport StudentProfile from \"./StudentProfile\";\nimport CompanyProfile from \"./CompanyProfile\";\nimport { useGetAndSet } from 'react-context-hook';\n\n\nexport default function AddProfile() {\n    const [usertype] = useGetAndSet(\"usertype\");\n\n    if (usertype === \"student\") return <StudentProfile />;\n    else return <CompanyProfile />;\n}\n","import React, { useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { useStoreValue } from \"react-context-hook\";\r\n\r\nconst useStyles = (theme) => ({\r\n    root: {\r\n        \"& .MuiTextField-root\": {\r\n            margin: theme.spacing(1),\r\n            width: \"50ch\",\r\n        },\r\n    },\r\n    heading: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    button: {\r\n        marginLeft: theme.spacing(1),\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    caption: {\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(3),\r\n    },\r\n});\r\n\r\nfunction AddInternship(props) {\r\n    const usertype = \"internship\";\r\n\r\n    // const token = useStoreValue(\"isLoggedIn\");\r\n    const username = useStoreValue(\"username\");\r\n\r\n    // const [emp_name, setEmp_name] = useState(\"\");\r\n    const [itr_name, setItr_name] = useState(\"\");\r\n    const [stipend, setStipend] = useState(\"\");\r\n    const [branch, setBranch] = useState(\"\");\r\n    const [city, setCity] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [gpa, setGpa] = useState(\"\");\r\n    const [hasCreated, setHasCreated] = useState(\"\");\r\n\r\n    const onSubmit = () => {\r\n        const data = {\r\n            emp_name: username,\r\n            itr_name,\r\n            stipend,\r\n            branch,\r\n            city,\r\n            description,\r\n            gpa,\r\n            usertype,\r\n        };\r\n        console.log(data);\r\n        fetch(/*notLocalhost*/\"/api/v1/add_internship_scholarship\", {\r\n            method: \"PUT\",\r\n            mode: \"cors\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n            },\r\n            body: JSON.stringify(data),\r\n        })\r\n            .then((response) => {\r\n                console.log(response);\r\n                if (response.ok) return response.json();\r\n                else throw Error(response.status + \" \" + response.statusText);\r\n            })\r\n            .then((data) => {\r\n                console.log(data);\r\n                setHasCreated(true);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error:\", error);\r\n            });\r\n    };\r\n    const { classes } = props;\r\n\r\n    return hasCreated ? (\r\n        <Redirect to=\"/\" />\r\n    ) : (\r\n            <Container maxWidth=\"sm\">\r\n                <Typography className={classes.heading} variant=\"h4\">\r\n                    Add Internship\r\n            </Typography>\r\n                <form\r\n                    className={classes.root}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                // onSubmit={this.onSubmit}\r\n                >\r\n                    <Grid container>\r\n                        <Grid container item>\r\n                            <TextField\r\n                                required\r\n                                id=\"outlined-required\"\r\n                                label=\"Job Title\"\r\n                                name=\"itr_name\"\r\n                                value={itr_name}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => setItr_name(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container item>\r\n                            <TextField\r\n                                required\r\n                                id=\"outlined-required\"\r\n                                label=\"Stipend provided\"\r\n                                name=\"stipend\"\r\n                                value={stipend}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => setStipend(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container item>\r\n                            <TextField\r\n                                required\r\n                                id=\"outlined-required\"\r\n                                label=\"Required Branch\"\r\n                                name=\"branch\"\r\n                                value={branch}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => setBranch(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container item>\r\n                            <TextField\r\n                                required\r\n                                id=\"outlined-required\"\r\n                                label=\"City\"\r\n                                name=\"city\"\r\n                                value={city}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => setCity(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container item>\r\n                            <TextField\r\n                                required\r\n                                id=\"outlined-required\"\r\n                                label=\"Description\"\r\n                                name=\"description\"\r\n                                value={description}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => setDescription(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container item>\r\n                            <TextField\r\n                                required\r\n                                id=\"outlined-required\"\r\n                                label=\"Minimum GPA\"\r\n                                name=\"gpa\"\r\n                                value={gpa}\r\n                                variant=\"outlined\"\r\n                                onChange={(e) => setGpa(e.target.value)}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid container item>\r\n                            <Button\r\n                                className={classes.button}\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                // type=\"submit\"\r\n                                onClick={onSubmit}\r\n                            >\r\n                                Add Internship\r\n                        </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </Container>\r\n        );\r\n}\r\n\r\nexport default withStyles(useStyles)(AddInternship);\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { withStore } from \"react-context-hook\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Components/HomePage\";\nimport SignIn from \"./Components/SignInPage\";\nimport SignUp from \"./Components/SignUpPage\";\nimport Profile from \"./Components/ProfilePage\";\nimport Logout from \"./Components/Logout\";\nimport AddProfile from \"./Components/AddProfilePage\";\nimport AddInternship from \"./Components/AddInternship\";\n\nconst initialState = Object.assign(\n    {\n        isLoggedIn: false,\n        username: null,\n    },\n    JSON.parse(localStorage.getItem(\"state\"))\n); // Using localStorage to persist on reload\n\nconst storeConfig = {\n    listener: (state) => {\n        console.log(\"state changed\", state);\n        // persist state to localStorage\n        localStorage.setItem(\"state\", JSON.stringify(state));\n    },\n    logging: process.env.NODE_ENV !== \"production\",\n};\n\nfunction App() {\n    console.log(\"How many?\");\n    return (\n        <Router>\n            <Header />\n\n            <Switch>\n                <Route exact path=\"/\" component={Home} />\n\n                <Route path=\"/signin\" component={SignIn} />\n\n                <Route path=\"/signup\" component={SignUp} />\n\n                <Route path=\"/addprofile\" component={AddProfile} />\n\n                <Route path=\"/profile\" component={Profile} />\n\n                <Route path=\"/addinternship\" component={AddInternship} />\n\n                <Route path=\"/logout\" component={Logout} />\n            </Switch>\n        </Router>\n    );\n}\n\nexport default withStore(App, initialState, storeConfig);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","const isLoggedIn = () => {\n\t// returns token if logged in, else null\n\treturn localStorage.getItem(\"token\");\n};\n\nconst setToken = (token) => {\n\tlocalStorage.setItem(\"token\", token);\n}\n\nexports.isLoggedIn = isLoggedIn;\nexports.setToken = setToken;"],"sourceRoot":""}